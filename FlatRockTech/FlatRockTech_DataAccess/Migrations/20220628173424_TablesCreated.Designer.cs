// <auto-generated />
using System;
using FlatRockTech_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlatRockTech_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220628173424_TablesCreated")]
    partial class TablesCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlatRockTech_Models.Models.Achievement", b =>
                {
                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.Property<int?>("UsersAnswerAnswer_Id")
                        .HasColumnType("int");

                    b.HasKey("User_Id", "Question_Id");

                    b.HasIndex("Question_Id");

                    b.HasIndex("UsersAnswerAnswer_Id");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.Answer", b =>
                {
                    b.Property<int>("Answer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerType")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Question_Id")
                        .HasColumnType("int");

                    b.HasKey("Answer_Id");

                    b.HasIndex("Question_Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.Question", b =>
                {
                    b.Property<int>("Question_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.HasKey("Question_Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.Achievement", b =>
                {
                    b.HasOne("FlatRockTech_Models.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatRockTech_Models.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatRockTech_Models.Models.Answer", "UsersAnswer")
                        .WithMany()
                        .HasForeignKey("UsersAnswerAnswer_Id");

                    b.Navigation("Question");

                    b.Navigation("User");

                    b.Navigation("UsersAnswer");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.Answer", b =>
                {
                    b.HasOne("FlatRockTech_Models.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("FlatRockTech_Models.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
